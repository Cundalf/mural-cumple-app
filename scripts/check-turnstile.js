#!/usr/bin/env node

/**
 * Script para verificar la configuraci√≥n de Cloudflare Turnstile
 * Uso: node scripts/check-turnstile.js
 */

console.log('üîç Verificando configuraci√≥n de Cloudflare Turnstile...\n')

// Verificar variables de entorno
const requiredEnvVars = [
  'NEXT_PUBLIC_CLOUDFLARE_TURNSTILE_SITE_KEY',
  'CLOUDFLARE_TURNSTILE_SECRET_KEY'
]

const optionalEnvVars = [
  'NEXT_PUBLIC_DISABLE_TURNSTILE',
  'DISABLE_TURNSTILE'
]

console.log('üìã Variables de entorno requeridas:')
let missingRequired = false
requiredEnvVars.forEach(varName => {
  const value = process.env[varName]
  if (value) {
    console.log(`‚úÖ ${varName}: ${value.substring(0, 10)}...`)
  } else {
    console.log(`‚ùå ${varName}: NO CONFIGURADA`)
    missingRequired = true
  }
})

console.log('\nüìã Variables de entorno opcionales:')
optionalEnvVars.forEach(varName => {
  const value = process.env[varName]
  if (value) {
    console.log(`‚ÑπÔ∏è  ${varName}: ${value}`)
  } else {
    console.log(`‚ÑπÔ∏è  ${varName}: no configurada (usando valor por defecto)`)
  }
})

// Verificar si Turnstile est√° deshabilitado
const isDisabled = process.env.NEXT_PUBLIC_DISABLE_TURNSTILE === 'true' || 
                   process.env.DISABLE_TURNSTILE === 'true'

console.log(`\nüö¶ Estado de Turnstile: ${isDisabled ? 'DESHABILITADO' : 'HABILITADO'}`)

if (isDisabled) {
  console.log('‚ö†Ô∏è  Turnstile est√° deshabilitado. Para habilitarlo:')
  console.log('   - Establece NEXT_PUBLIC_DISABLE_TURNSTILE=false')
  console.log('   - Establece DISABLE_TURNSTILE=false')
  console.log('   - Aseg√∫rate de que las claves est√©n configuradas')
} else {
  const siteKey = process.env.NEXT_PUBLIC_CLOUDFLARE_TURNSTILE_SITE_KEY
  const secretKey = process.env.CLOUDFLARE_TURNSTILE_SECRET_KEY
  
  if (!siteKey || !secretKey) {
    console.log('‚ùå Turnstile est√° habilitado pero faltan las claves:')
    if (!siteKey) console.log('   - NEXT_PUBLIC_CLOUDFLARE_TURNSTILE_SITE_KEY')
    if (!secretKey) console.log('   - CLOUDFLARE_TURNSTILE_SECRET_KEY')
  } else {
    console.log('‚úÖ Turnstile est√° correctamente configurado')
    
    // Verificar formato de las claves
    if (siteKey && siteKey.length < 20) {
      console.log('‚ö†Ô∏è  La site key parece ser muy corta. Verifica que sea correcta.')
    }
    
    if (secretKey && secretKey.length < 20) {
      console.log('‚ö†Ô∏è  La secret key parece ser muy corta. Verifica que sea correcta.')
    }
  }
}

// Verificar entorno
console.log('\nüåç Entorno de ejecuci√≥n:')
console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'no configurado'}`)
console.log(`   Platform: ${process.platform}`)
console.log(`   Node version: ${process.version}`)

// Verificar archivos de configuraci√≥n
const fs = require('fs')
const path = require('path')

console.log('\nüìÅ Verificaci√≥n de archivos:')

const filesToCheck = [
  '.env',
  '.env.local',
  '.env.production',
  'next.config.mjs',
  'package.json'
]

filesToCheck.forEach(file => {
  const filePath = path.join(process.cwd(), file)
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file}: existe`)
    
    // Verificar contenido espec√≠fico para algunos archivos
    if (file === 'next.config.mjs') {
      const content = fs.readFileSync(filePath, 'utf8')
      if (content.includes('NEXT_PUBLIC_CLOUDFLARE_TURNSTILE_SITE_KEY')) {
        console.log(`   ‚úÖ ${file}: contiene configuraci√≥n de Turnstile`)
      } else {
        console.log(`   ‚ö†Ô∏è  ${file}: no contiene configuraci√≥n de Turnstile`)
      }
    }
  } else {
    console.log(`‚ùå ${file}: no existe`)
  }
})

// Verificar dependencias
console.log('\nüì¶ Verificaci√≥n de dependencias:')
try {
  const packageJson = JSON.parse(fs.readFileSync(path.join(process.cwd(), 'package.json'), 'utf8'))
  const hasNext = packageJson.dependencies?.next || packageJson.devDependencies?.next
  const hasReact = packageJson.dependencies?.react || packageJson.devDependencies?.react
  
  if (hasNext) {
    console.log(`‚úÖ Next.js: ${hasNext}`)
  } else {
    console.log('‚ùå Next.js: no encontrado')
  }
  
  if (hasReact) {
    console.log(`‚úÖ React: ${hasReact}`)
  } else {
    console.log('‚ùå React: no encontrado')
  }
} catch (error) {
  console.log('‚ùå Error leyendo package.json:', error.message)
}

// Recomendaciones espec√≠ficas para producci√≥n
console.log('\nüöÄ Recomendaciones para producci√≥n:')

if (process.env.NODE_ENV === 'production') {
  console.log('‚úÖ Ejecutando en modo producci√≥n')
  
  if (missingRequired) {
    console.log('‚ùå FALTAN VARIABLES REQUERIDAS para producci√≥n:')
    console.log('   1. Configura NEXT_PUBLIC_CLOUDFLARE_TURNSTILE_SITE_KEY')
    console.log('   2. Configura CLOUDFLARE_TURNSTILE_SECRET_KEY')
    console.log('   3. Aseg√∫rate de que las claves sean v√°lidas en Cloudflare')
  } else {
    console.log('‚úÖ Todas las variables requeridas est√°n configuradas')
  }
  
  console.log('\nüîß Pasos para solucionar problemas en producci√≥n:')
  console.log('   1. Verifica que las claves de Turnstile sean v√°lidas')
  console.log('   2. Aseg√∫rate de que el dominio est√© autorizado en Cloudflare')
  console.log('   3. Revisa los logs del navegador para errores de JavaScript')
  console.log('   4. Verifica que el script se cargue correctamente')
  console.log('   5. Comprueba que no haya bloqueadores de anuncios activos')
} else {
  console.log('‚ÑπÔ∏è  Ejecutando en modo desarrollo')
  console.log('   Para probar en producci√≥n, establece NODE_ENV=production')
}

console.log('\nüìù Para configurar las variables de entorno:')
console.log('1. Copia env.example a .env')
console.log('2. Configura tus claves de Cloudflare Turnstile')
console.log('3. Para Docker, aseg√∫rate de que el .env est√© en el directorio ra√≠z')

console.log('\nüîß Para Docker:')
console.log('docker-compose up --build')

console.log('\nüîß Para desarrollo local:')
console.log('npm run dev')

console.log('\nüîß Para verificar en el navegador:')
console.log('1. Abre las herramientas de desarrollador (F12)')
console.log('2. Ve a la pesta√±a Console')
console.log('3. Busca mensajes relacionados con "turnstile" o "cloudflare"')
console.log('4. Verifica que no haya errores de red en la pesta√±a Network')

// Si hay problemas, mostrar informaci√≥n adicional
if (missingRequired || isDisabled) {
  console.log('\nüö® PROBLEMAS DETECTADOS:')
  if (missingRequired) {
    console.log('   - Faltan variables de entorno requeridas')
  }
  if (isDisabled) {
    console.log('   - Turnstile est√° deshabilitado')
  }
  console.log('\nüí° SOLUCI√ìN:')
  console.log('   1. Configura las variables de entorno')
  console.log('   2. Habilita Turnstile si es necesario')
  console.log('   3. Reinicia la aplicaci√≥n')
} 